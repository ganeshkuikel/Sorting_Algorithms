{"version":3,"sources":["logo.svg","SortingAlgorithms/sortings/merge_sort.js","SortingAlgorithms/SortingAlgorithms.js","SortingAlgorithms/sortings/bubble_sorting.js","SortingAlgorithms/sortings/selection_sort.js","SortingAlgorithms/sortings/insertion_sort.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","doMergeSortTask","mainarray","animations","arr","slice","divide_merge_sort","start","end","mid","Math","floor","sorted","i","j","push","length","perform_merge","javaScriptSortedArray","sort","a","b","console","log","firstArray","secondArray","arraysAreEqual","SortingVisualizer","props","state","array","this","resetAllArray","min","max","random","setState","auxillaryArray","N","temp","bubbleSort","doAnimationBubbleSort","isColorChange","arrayBars","document","getElementsByClassName","color","barOneIndex","barTwoIndex","barOneStyle","style","barTwoStyle","setTimeout","backgroundColor","barIndex","newHeight","barStyle","height","n","pos","selectionSort","doselectionSort","auxarray","value","hole","insertion_sort","do_insertion_sort","isRunning","pow","cursor","className","map","idx","key","margin","onClick","id","position","insertionSort","mergeSort","display","React","Component","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.e84e92ab.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","\r\nexport function doMergeSortTask(mainarray){\r\n\tlet animations = [];\r\n\tlet arr = mainarray.slice();\r\n\tdivide_merge_sort(arr,0,arr.length-1,animations);\r\n\tconst javaScriptSortedArray = mainarray.slice().sort((a, b) => a - b);\r\n    console.log(arraysAreEqual(javaScriptSortedArray, arr));\r\n\treturn[animations,mainarray];\r\n}\r\n\r\nfunction divide_merge_sort(arr,start,end,animations){\r\n\tif (start === end) return;\r\n\r\n\tlet mid = Math.floor((start+end)/2);\r\n\t// For left half\r\n\tdivide_merge_sort(arr,start,mid,animations);\r\n\t// For right half\r\n\tdivide_merge_sort(arr,mid+1,end,animations);\r\n\tperform_merge(arr,start,mid,end,animations);\r\n}\r\n\r\n\r\n\r\nfunction perform_merge(arr,start,mid,end,animations){\r\n\tlet sorted = [];\r\n\tlet i=start,\r\n\tj=mid+1;\r\n\r\n\twhile(i <= mid && j <= end){\r\n\t\t// Compare values and change their color\r\n\t\tanimations.push([i,j]);\r\n\t\t// Now again change their color\r\n\t\tanimations.push([i,j]);\r\n\r\n\t\tif(arr[i] <= arr[j]){\r\n\t\t\t// overriding sorted length's (i+start)th index with ith index\r\n\t\t\tanimations.push([sorted.length+start,arr[i]]);\r\n\t\t\tsorted.push(arr[i++]);\r\n\t\t}\r\n\t\telse{\r\n\t\t\t// overriding sorted length's (j+start)th index with jth index\r\n\t\t\tanimations.push([sorted.length+start,arr[j]]);\r\n\t\t\tsorted.push(arr[j++]);\r\n\t\t}\r\n\t}\r\n\twhile(i <= mid){\r\n\t\tanimations.push([i,i]);\r\n\t\tanimations.push([i,i]);\r\n\t\tanimations.push([sorted.length + start, arr[i]]);\r\n        sorted.push(arr[i++]);\r\n\t}\r\n\twhile(j <= end){\r\n\t\tanimations.push([j,j]);\r\n\t\tanimations.push([j,j]);\r\n\t\tanimations.push([sorted.length+start,arr[j]]);\r\n\t\tsorted.push(arr[j++]);\r\n\t}\r\n\tfor (let i = start; i<=end;i++){\r\n\t\tarr[i] = sorted[i-start];\r\n\t}\r\n}\r\n\r\nfunction arraysAreEqual(firstArray, secondArray) {\r\n    if (firstArray.length !== secondArray.length) {\r\n        return false;\r\n    }\r\n    for (let i = 0; i < firstArray.length; i++) {\r\n      if (firstArray[i] !== secondArray[i]) {\r\n        return false;\r\n      }\r\n    }\r\n    return true;\r\n}","import React from 'react';\r\nimport  './SortingAlgorithms.css';\r\nimport {doAnimationBubbleSort} from './sortings/bubble_sorting.js';\r\nimport {doselectionSort} from './sortings/selection_sort.js';\r\nimport {do_insertion_sort} from './sortings/insertion_sort.js';\r\nimport {doMergeSortTask} from './sortings/merge_sort.js';\r\n\r\n// Color of bar\r\nconst BAR_COLOR = 'green';\r\nconst SECONDARY_COLOR = 'red';\r\nconst ANIMATION_SPEED_MS = 10;\r\nconst ARRAY_LENGTH = 110;\r\n\r\n class SortingVisualizer extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      array: [],\r\n    };\r\n  }\r\n\r\n\r\ncomponentDidMount() {\r\n\tthis.resetAllArray();\r\n}\r\nresetAllArray () {\r\n\tconst array = [];\r\n\tfor (let i=0;i <ARRAY_LENGTH; i++){\r\n\t\tarray.push(generateRandomNumbers(5,500));\r\n\t}\r\n\tthis.setState({array});\r\n}\r\n\r\nbubbleSort() {\r\n        const [animations] = doAnimationBubbleSort(this.state.array);\r\n        for (let i = 0; i < animations.length; i++) {\r\n            const isColorChange = (i % 4 === 0) || (i % 4 === 1);\r\n            const arrayBars = document.getElementsByClassName('array-bar');\r\n            if(isColorChange ) {\r\n                const color = (i % 4 === 0) ? SECONDARY_COLOR : BAR_COLOR;\r\n                const [barOneIndex, barTwoIndex] = animations[i];\r\n                const barOneStyle = arrayBars[barOneIndex].style;\r\n                const barTwoStyle = arrayBars[barTwoIndex].style;\r\n                setTimeout(() => {\r\n                    barOneStyle.backgroundColor = color;\r\n                    barTwoStyle.backgroundColor = color;\r\n                },i * ANIMATION_SPEED_MS);\r\n            }\r\n            else {\r\n                const [barIndex, newHeight] = animations[i];\r\n                if (barIndex === -1) {\r\n                    continue;\r\n                }\r\n                const barStyle = arrayBars[barIndex].style;\r\n                setTimeout(() => {\r\n                    barStyle.height = `${newHeight}px`;\r\n                },i * ANIMATION_SPEED_MS);  \r\n            }\r\n        }\r\n        \r\n    }\r\n\r\n selectionSort() {\r\n        const [animations] = doselectionSort(this.state.array);\r\n        for (let i = 0; i < animations.length; i++) {\r\n            const isColorChange = (animations[i][0] === \"firstcomp\") || (animations[i][0] === \"secondcomp\");\r\n            const arrayBars = document.getElementsByClassName('array-bar');\r\n            if(isColorChange === true) {\r\n                const color = (animations[i][0] === \"firstcomp\") ? SECONDARY_COLOR :  BAR_COLOR;\r\n                const [temp, barOneIndex, barTwoIndex] = animations[i];\r\n                const barOneStyle = arrayBars[barOneIndex].style;\r\n                const barTwoStyle = arrayBars[barTwoIndex].style;\r\n                setTimeout(() => {\r\n                    barOneStyle.backgroundColor = color;\r\n                    barTwoStyle.backgroundColor = color;\r\n                },i * ANIMATION_SPEED_MS);\r\n            }\r\n            else {\r\n                const [temp, barIndex, newHeight] = animations[i];\r\n                const barStyle = arrayBars[barIndex].style;\r\n                setTimeout(() => {\r\n                    barStyle.height = `${newHeight}px`;\r\n                },i * ANIMATION_SPEED_MS);  \r\n            }\r\n        }\r\n        \r\n    }\r\n\r\ninsertionSort(){\r\n    const [animations] = do_insertion_sort(this.state.array);\r\n    for (let i=0;i<animations.length;i++){\r\n        const isColorChange = (animations[i][0] === \"firstcomp\")||(animations[i][0]===\"secondcomp\");\r\n        const arrayBars = document.getElementsByClassName(\"array-bar\");\r\n        if (isColorChange === true){\r\n            const color = (animations[i][0] === \"firstcomp\") ? SECONDARY_COLOR:BAR_COLOR;\r\n            const [temp,barOneIndex,barTwoIndex]=animations[i];\r\n            const barOneStyle = arrayBars[barOneIndex].style;\r\n            const barTwoStyle = arrayBars[barTwoIndex].style;\r\n            setTimeout (()=>{\r\n                barOneStyle.backgroundColor = color;\r\n                barTwoStyle.backgroundColor = color;\r\n\r\n            },i*ANIMATION_SPEED_MS);\r\n        }\r\n        else{\r\n            const [temp, barIndex, newHeight] = animations[i];\r\n                const barStyle = arrayBars[barIndex].style;\r\n                setTimeout(() => {\r\n                    barStyle.height = `${newHeight}px`;\r\n                },i * ANIMATION_SPEED_MS);  \r\n        }\r\n}\r\n}\r\n\r\n  mergeSort() {\r\n    const [animations] =doMergeSortTask(this.state.array);\r\n    for (let i =0;i<animations.length;i++){\r\n        const isColorChange = (i % 3 !== 2);\r\n        const arrayBars = document.getElementsByClassName(\"array-bar\");\r\n        if (isColorChange  === true){\r\n            const color = (i % 3 === 0) ? SECONDARY_COLOR:BAR_COLOR;\r\n            const [barOneIndex,barTwoIndex]=animations[i];\r\n            const barOneStyle = arrayBars[barOneIndex].style;\r\n            const barTwoStyle = arrayBars[barTwoIndex].style;\r\n\r\n            setTimeout(()=>{\r\n                barOneStyle.backgroundColor = color;\r\n                barTwoStyle.backgroundColor = color;\r\n            },i*ANIMATION_SPEED_MS);\r\n        } else{\r\n            const [barIndex,newHeight] = animations[i];\r\n            const barStyle = arrayBars[barIndex].style;\r\n            setTimeout(()=>{\r\n                barStyle.height = `${newHeight}px`;\r\n            },i*ANIMATION_SPEED_MS);\r\n        }\r\n    }       \r\n    }\r\n\r\n\r\n\r\n\r\nrender () {\r\n\tconst {array,isRunning,} =this.state;\r\n     const speed = 570 - Math.pow(array.length, 2) > 0 ?\r\n      570 - Math.pow(array.length, 2) : 0;\r\n\r\n     const color = isRunning ? \"rgba(214, 29, 29, 0.8)\" : \"black\";\r\n\r\n     const cursor = isRunning ? \"auto\" : \"pointer\";\r\n\treturn (\r\n\t\t<div className=\"array-container\" > \r\n\t\t{array.map((value,idx) => (\r\n\t\t\t<div\r\n            className=\"array-bar\"\r\n            key={idx}\r\n            style={{\r\n              backgroundColor: BAR_COLOR,color: color, cursor: cursor,\r\n              height: `${value}px`,\r\n            }} ></div>\r\n\t\t\t))}\r\n\t\t\t<button style={{  margin:'20px' }}  onClick={() => this.resetAllArray()}> \r\n\t\t\tGenerate Random Numbers</button>\r\n\t\t\t<button  id = \"bubbleSort\" style={{position:'relative'}} onClick={() => this.bubbleSort() }>\r\n\t\t\tBubble Sort</button>\r\n            <button  id = \"selectionSort\" style={{position:'relative', margin:'20px'}} onClick={() => this.selectionSort() }>\r\n            Selection Sort</button>\r\n            <button  id = \"insertionSort\" style={{position:'relative', margin:'20px'}} onClick={() => this.insertionSort() }>\r\n            Insetion Sort</button>\r\n            <button  id = \"mergeSort\" style={{position:'relative', margin:'20px'}} onClick={() => this.mergeSort() }>\r\n            Merge Sort</button>\r\n\r\n\r\n            <div className=\"finised\" style={{ display:\"none\", }}>Hello</div> \r\n\r\n\r\n\t\t\t\r\n\t\t</div>\r\n\r\n\t\t);\r\n\t}\r\n}\r\n\r\nfunction generateRandomNumbers(min,max) {\r\n\t\t // Including all minimum and maximum number\r\n\treturn Math.floor(Math.random() * (max - min + 1)+min);\r\n\t}\r\n\r\nexport default SortingVisualizer;","export function doAnimationBubbleSort(mainarray) {\r\n    let animations  = [];\r\n    let auxillaryArray = mainarray.slice();\r\n    bubbleSort(auxillaryArray, animations);\r\n    mainarray = auxillaryArray;\r\n    return [animations, mainarray];\r\n}\r\n\r\nfunction bubbleSort(auxillaryArray, animations) {\r\n    const N = auxillaryArray.length;\r\n    for (let i = 0; i < N - 1; i++) {\r\n        for (let j = 0; j < N - i -1; j++) {\r\n            animations.push([j, j + 1]);\r\n            animations.push([j, j + 1]);\r\n            if (auxillaryArray[j] > auxillaryArray[j + 1]) {\r\n                animations.push([j, auxillaryArray[j + 1]]);\r\n                animations.push([j + 1, auxillaryArray[j]]);\r\n\r\n\r\n                let temp = auxillaryArray[j];\r\n                auxillaryArray[j]=auxillaryArray[j+1];\r\n                auxillaryArray[j+1]=temp;\r\n            }\r\n            else {\r\n                animations.push([-1, -1]);\r\n                animations.push([-1, -1]);            }\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n","\r\n\r\nexport function doselectionSort(array) {\r\n    let animations  = [];\r\n    let auxillaryArray = array.slice();\r\n    selectionSort(auxillaryArray, animations);\r\n    const javaScriptSortedArray = array.slice().sort((a, b) => a - b);\r\n    console.log(\"sort works correctly? \",arraysAreEqual(javaScriptSortedArray, auxillaryArray));\r\n    array = auxillaryArray;\r\n    return [animations, array];\r\n}\r\n\r\nfunction selectionSort(arr, animations) {\r\n    const n = arr.length;\r\n    for (let i=0;i<n-1;i++){\r\n     \tlet pos = i;\r\n    \t\tfor (let j=i+1;j<n;j++){\r\n     \t\tanimations.push([\"firstcomp\",j,pos]);\r\n     \t\tanimations.push([\"secondcomp\",j,pos]);\r\n     \t\tif (arr[j]<arr[pos]){\r\n     \t\t\tpos=j;\r\n     \t\t}\r\n     \t}\r\n     \tanimations.push([\"temp\",pos,arr[i]]);\r\n     \tanimations.push([\"temp\",i,arr[pos]]);\r\n     \tlet temp = arr[i];\r\n     \tarr[i] = arr[pos];\r\n     \tarr[pos] = temp;\r\n     \t}\r\n}\r\n\r\n\r\n\r\n\r\nfunction arraysAreEqual(firstArray, secondArray) {\r\n    if (firstArray.length !== secondArray.length) {\r\n        return false;\r\n    }\r\n    for (let i = 0; i < firstArray.length; i++) {\r\n      if (firstArray[i] !== secondArray[i]) {\r\n        return false;\r\n      }\r\n    }\r\n    return true;\r\n}","\r\nexport function do_insertion_sort(arr){\r\n\tlet animations = [];\r\n\tlet auxarray=arr.slice();\r\n\tinsertion_sort(auxarray,animations);\r\n\tconst javaScriptSortedArray = arr.slice().sort((a, b) => a - b);\r\n    console.log(\"sort works correctly? \",arraysAreEqual(javaScriptSortedArray, auxarray));\r\n\tarr=auxarray;\r\n\treturn [animations,arr];\r\n}\r\n\r\n\r\nfunction insertion_sort(arr,animations){\r\n\tlet n = arr.length;\r\n\tfor(let i=1;i<n;i++){\r\n\t\tlet value=arr[i];\r\n\t\tlet hole=i;\r\n\t\tanimations.push([\"firstcomp\",hole-1,i]);\r\n\t\tanimations.push([\"secondcomp\",hole-1,i]);\r\n\t\twhile(hole>0 && arr[hole-1]>value){\r\n\t\t\t\r\n\t\t\tanimations.push([\"comparison\",hole,arr[hole-1]]);\r\n\t\t\tarr[hole]=arr[hole-1];\r\n\t\t\thole = hole-1;\r\n\t\t\tif(hole >= 0){\r\n\t\t\t\tanimations.push([\"firstcomp\",hole,i]);\r\n\t\t\t\tanimations.push([\"secondcomp\",hole,i]);\r\n\r\n\t\t\t}\r\n\t\t}\r\n\t\tanimations.push([\"comparison\",hole,value]);\r\n\r\n\t\tarr[hole]=value;\r\n\t}\r\n\t// return arr;\r\n}\r\n\r\nfunction arraysAreEqual(firstArray, secondArray) {\r\n    if (firstArray.length !== secondArray.length) {\r\n        return false;\r\n    }\r\n    for (let i = 0; i < firstArray.length; i++) {\r\n      if (firstArray[i] !== secondArray[i]) {\r\n        return false;\r\n      }\r\n    }\r\n    return true;\r\n}","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport SortingAlgorithms from './SortingAlgorithms/SortingAlgorithms.js';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <SortingAlgorithms></SortingAlgorithms>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}